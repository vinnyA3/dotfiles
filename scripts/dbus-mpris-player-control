#!/bin/bash

# dbus-mpris-player-control:
#   * this script allows basic cli control for valid mpris dbus clients
#   * (note) only works for firefox atm .. will add other browsers later

# search valid dbus music player client 
FOUND_MUSIC_PLAYER_CLIENT=$(dbus-send \
  --print-reply \
  --dest=org.freedesktop.DBus \
  /org/freedesktop/DBus \
  org.freedesktop.DBus.ListNames | awk '/mpris/ && /firefox/')

# toggle: toggle between play/pause states
function toggle() {
  dbus-send \
    --print-reply \
    --dest="$1" \
    /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause
}

# next: next song 
function next()
{
  dbus-send \
    --print-reply \
    --dest="$1" \
    /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next
}

# prev: previous song 
function prev()
{
  dbus-send \
    --print-reply \
    --dest="$1" \
    /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous
}

function handleErrorneousInput()
{
  if [ -z "$1" ];
  then
    echo 'Please input a command!'
  else
    echo "'$1' is not a valid command!  Consult help if needed: dbus-mpris-player-control --help"
  fi
}

# help: description script & valid commands
function help()
{
  echo -e '
  dbus-mpris-player-control: a helpful script to control current audio source
  managed by the mpris client.  Actions and commands are relayed using the dbus
  protocol.
  \n
  Syntax: dbus-mpris-player-control [-options][command]\n
  Options:
  h     Print this help.
  \n
  Commands:
  toggle: play/pause the current mpris media
  next: skip to the next track in the media playlist
  prev: restart current track, or play previous track
  \n
  Example(s):
  Print help     dbus-mpris-player-control -h
  Toggle current track     dbus-mpris-player-control toggle '
}

###################################################################
# Main Entry Point
###################################################################

# if our variable does not contain an empty string (target acquired)
if [ ! -z "$FOUND_MUSIC_PLAYER_CLIENT" ];
then
  NORMALIZED_PLAYER_STRING=$(echo "$FOUND_MUSIC_PLAYER_CLIENT" | awk '{ print $2 }' | tr -d '"')

  case "$1" in
    "toggle" ) toggle $NORMALIZED_PLAYER_STRING;; 
    "next" ) next $NORMALIZED_PLAYER_STRING;; 
    "prev" ) prev $NORMALIZED_PLAYER_STRING;; 
    "--help" | "-h" ) help;;
    *) handleErrorneousInput $1; exit 1;; 
  esac
else
  echo 'A valid player client has not been found ... better luck next time :)'
  exit 1
fi

