#!/bin/sh
#
# wmutils/contrib>: snap.sh, 9/12/15 kekler 
# snaps focued window to the left, right, top, or bottom edge

usage() {
    echo "usage: $(basename $0) <direction>" >&2
    exit 1
}

# default values for gaps and master area
# TOP_PANEL=${PANEL:-20}
TOP_PANEL=8
GAP=${GAP:-18}

# get current window id and its borderwidth
# PFW=$(pfw) -- sub for dmenu
PFW=$(xprop -root _NET_ACTIVE_WINDOW | cut -d ' ' -f 5)
BW=$(wattr b $PFW)

RHSW=$(wattr w $PFW)
RHSH=$(wattr h $PFW)

# get root window's size
ROOT=$(lsw -r)
SW=$(wattr w $ROOT)
SH=$(wattr h $ROOT)

# calculate usable screen size (without borders and gaps)
SH=$((SH + TOP_PANEL))

snap_up() 
{
    wtp $GAP $((GAP - TOP_PANEL)) $((SW - 2*GAP - 2*BW)) $((SH/2 - 2*BW - GAP - GAP/2)) $PFW
}

snap_right() 
{
    wtp $((SW - SW/2 + GAP/2)) $((GAP + TOP_PANEL)) $((SW/2 - 2*BW - GAP - GAP/2)) $((SH - 2*BW - 90)) $PFW
}

snap_down() 
{
    wtp $GAP $((SH - SH/2 + GAP/2 - 30)) $((SW - 2*GAP - 2*BW)) $((SH/2 - 2*BW - GAP - GAP/2)) $PFW
}

snap_left()
{
    wtp $GAP $((GAP + TOP_PANEL)) $((SW/2 - 2*BW - GAP - GAP/2)) $((SH - 2*BW - 90)) $PFW
}

# HSW=$((SW/2 - 2*BW - GAP - GAP/2))
# HSH=$((SH/2 - 2*BW - GAP - GAP/2))
HSW=$((SW/2 - 2*BW - GAP))
HSH=$((SH/2 - 2*BW - GAP))

snap_tr()
{
    wtp $((SW - SW/2 + GAP/2)) $((GAP + TOP_PANEL)) $HSW $HSH $PFW
}

snap_br()
{
    wtp $((SW - SW/2 + GAP/2)) $((SH - SH/2 + GAP/2 - 40)) $HSW $HSH $PFW 
}

snap_tl()
{
    wtp $GAP $((GAP + TOP_PANEL)) $HSW $HSH $PFW
}

snap_bl()
{
    wtp $GAP $((SH - SH/2 + GAP/2 - 40)) $HSW $HSH $PFW
}

direction=$(echo "h\nl\nk\nj\ntr\ntl\nbr\nbl" | dmenu -fn 'Tamzen-10' -nf '#fff' -b -y '0' -x '420' -w '600' -h '27' -p ' Direction ')

case $direction in
    h|a|west|left)  snap_left ;;
    j|s|south|down) snap_down ;;
    k|w|north|up)   snap_up ;;
    l|d|east|right) snap_right ;;
    tr|northeast)   snap_tr ;;
    br|southeast)   snap_br ;;
    tl|northwest)   snap_tl ;;
    bl|southwest)   snap_bl ;;
esac
